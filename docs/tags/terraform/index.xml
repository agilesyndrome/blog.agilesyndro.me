<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on AgileSyndro.me</title>
    <link>https://agilesyndro.me/tags/terraform/</link>
    <description>Recent content in Terraform on AgileSyndro.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2019 06:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://agilesyndro.me/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>13 Years later, and &#39;How was your day?&#39; still terrifies both of us.</title>
      <link>https://agilesyndro.me/blog/how-was-your-day/</link>
      <pubDate>Tue, 18 Jun 2019 06:00:00 -0400</pubDate>
      
      <guid>https://agilesyndro.me/blog/how-was-your-day/</guid>
      <description>13 Years Today is my 13th wedding anniversary. Let me start by saying my wife is amazing. Like, I could make all of you jealous by talking about how awesome she is. After 4,748 days of marriage though, the one question that still terrifies both of us is when she asks, &amp;ldquo;How was your day at work?&amp;rdquo; It goes one of two ways:
 I was successful in getting Packer to trigger some Ansible code that built an AMI that subsequently launched Terraform, all of which initiated from a GitHub Pull Request monitored by Jenkins AND Concourse!</description>
    </item>
    
    <item>
      <title>Terraform Modules Suck, but you should still use them</title>
      <link>https://agilesyndro.me/blog/terraform-modules-suck/</link>
      <pubDate>Mon, 10 Jun 2019 19:02:48 -0400</pubDate>
      
      <guid>https://agilesyndro.me/blog/terraform-modules-suck/</guid>
      <description>Terraform Like so many other people I jumped into Terraform right away. This was the answer I was looking for. It could provide an automated way to store AWS configurations in source control. It also let me try out Azure, Google, and many other providers in a cloud-agnostic (sorta) kinda of way.
Within a few days there were segments of code everywhere to create an EC2 instance. Everybody on my team made their own Terraform code.</description>
    </item>
    
  </channel>
</rss>